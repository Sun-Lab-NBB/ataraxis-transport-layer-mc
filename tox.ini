# This file provides configurations for tox-based project automation. Generally, this project uses tox similar to how
# some other projects use build-systems.

# Base tox configurations. Note, the 'envlist' will run in the listed order whenever 'tox' is used without an -e
# specifier.
[tox]
requires =
    tox-uv>=1,<2
    tox>=4,<5
envlist = test-teensy41, test-due, docs, build-teensy41, build-due

# This forces tox to create a 'sterile' environment into which the project with all dependencies is installed prior to
# running the requested tasks, isolating the process from the rest of the system. This is almost always the desired
# runtime mode.
isolated_build = True

[testenv:test-teensy41]
skip-install = true
description =
    Builds the project and runs project tests on the first discovered Teensy 4.1 microcontroller connected to the host
    PC.
allowlist_externals = platformio
deps =
    platformio
commands =
    pio test -e teensy41

[testenv:test-due]
skip-install = true
description =
    Builds the project and runs project tests on the first discovered Arduino Due microcontroller connected to the host
    PC.
allowlist_externals = platformio
deps =
    platformio
commands =
    pio test -e due

# Note: since doxygen is not pip-installable, it has to be installed and made available system-wide for this task to
# succeed. Consult https://www.doxygen.nl/manual/install.html for guidance.
# Uses '-j auto' to parallelize the build process and '-v' to make it verbose.
[testenv:docs]
skip-install = true
description =
    Builds the API documentation from source code docstrings using Doxygen, Breathe and Sphinx. The result can be
    viewed by loading 'docs/build/html/index.html'.
deps =
    sphinx>=8,<9
    sphinx-rtd-theme>=3,<4
    breathe>=4,<5
allowlist_externals =
    doxygen
    sphinx-build
commands =
    doxygen Doxyfile
    sphinx-build -b html -d docs/build/doctrees docs/source docs/build/html -j auto -v

[testenv:build-teensy41]
skip-install = true
description =
    Builds the project for Teensy 4.1 microcontroller platform.
allowlist_externals = platformio
commands =
    pio run -e teensy41

[testenv:build-due]
skip-install = true
description =
    Builds the project for Arduino Due microcontroller platform.
allowlist_externals = platformio
commands =
    pio run -e due

[testenv:upload-teensy41]
skip-install = true
description =
    Builds and uploads the project to the first discovered Teensy 4.1 microcontroller connected to the host PC.
allowlist_externals = platformio
commands =
    pio run -e teensy41 --target upload

[testenv:upload-due]
skip-install = true
description =
    Builds and uploads the project to the first discovered Arduino Due microcontroller connected to the host PC.
allowlist_externals = platformio
commands =
    pio run -e due --target upload
